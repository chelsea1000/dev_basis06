{"changed":true,"filter":false,"title":"PostController.php","tooltip":"/footBall/app/Http/Controllers/PostController.php","value":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Post;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Requests\\PostRequest;\nuse App\\Models\\Team;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass PostController extends Controller\n{\n    public function index(Post $post,Team $team) //Postsテーブルからデータを取得するためにPostクラス、チームステーブルからデータを取得するためにTeamクラスを呼び出す。\n    //public function=メソッドを定義する際に使用される構文。index(Post $post)=indexというメソッドの名前でその引数としてPostモデルのインスタンスを自動的に受け取る。\n    {\n        $post_data = $post->getPaginateByLimit(10); //Postテーブルからすべてデータを持ってくる。\n        $team_data = $team->get(); //チームステーブルからチームデータをすべて持ってくる。\n        //view():カッコ内で指定したblade.phpのファイルを開く。カッコ内にはresorces/viewsフォルダの中のパスを書く\n        return view('posts.index')->with(\n            [\n                'posts' => $post_data, //indexbladeに対してpostsという変数名で$post_dataの中身を渡す。\n                'teams' => $team_data //indexbladeに対してteamsという変数名で$team_dataの中身を渡す。\n            ]\n        );\n        //blade内で使う変数'posts'と設定。'posts'の中身にgetを使い、インスタンス化した$postを代入。\n    }\n    \n    public function show(Post $post)\n    {\n        return view('posts.show')->with(['post' => $post]);\n        //->with()はビューに変数を渡すためのもの。\n    }\n    \n    public function create(Post $post,Team $team)\n    {\n        $post_data = $post->getPaginateByLimit(20); //Postテーブルからすべてデータを持ってくる。\n        $team_data = $team->get(); //チームステーブルからチームデータをすべて持ってくる。\n        //view():カッコ内で指定したcreate..phpのファイルを開く。カッコ内にはresorces/viewsフォルダの中のパスを書く\n        return view('posts.create')->with(\n            [\n                'posts' => $post_data, //create.bladeに対してpostsという変数名で$post_dataの中身を渡す。\n                'teams' => $team_data //create.bladeに対してteamsという変数名で$team_dataの中身を渡す。\n            ]\n        );\n    }\n    \n    public function edit(Post $post,Team $team)\n    {\n        $post_data = $post->getPaginateByLimit(10); //Postテーブルからすべてデータを持ってくる。\n        $team_data = $team->get(); //チームステーブルからチームデータをすべて持ってくる。\n        return view('posts.edit')->with(\n            [\n                'posts' => $post_data, //indexbladeに対してpostsという変数名で$post_dataの中身を渡す。\n                'teams' => $team_data //indexbladeに対してteamsという変数名で$team_dataの中身を渡す。\n            ]\n        );\n        //blade内で使う変数'posts'と設定。'posts'の中身にgetを使い、インスタンス化した$postを代入。\n    }\n    \n    public function store(Request $request, Team $team)\n    //store=データをデータベースに追加するためのものを指す\n    {\n        $validateData = $request->validate([\n            'title' => 'required|string|max:255',\n            'team_id' => 'required|integer',\n            'body' => 'required|string',\n        ]);\n        \n        $post = new Post ();\n        $post->title = $validateData['title'];\n        $post->team_id = $validateData['team_id'];\n        $post->body = $validateData['body'];\n        $post->user_id = auth()->id(); // 現在のユーザーのIDを設定\n        $post->save();\n        \n        return redirect()->route('posts.index')->with('success', '投稿が保存されました。');\n    }\n    \n    // PostController.php\n    public function destroy(Post $post)\n    {\n        // 投稿を削除\n        $post->delete();\n        \n        // 一覧ページにリダイレクト\n        return redirect()->route('posts.index')->with('success', '投稿が削除されました。');\n    }\n    \n    public function update(Request $request, Post $post)\n    {\n    // バリデーション（必要に応じて追加）\n    $request->validate([\n        'title' => 'required|string|max:255',\n        'body' => 'required|string',\n    ]);\n\n    // 投稿を更新\n    $post->update($request->only(['title', 'body']));\n\n    // 投稿一覧ページにリダイレクト\n    return redirect()->route('posts.index')->with('success', '投稿が更新されました');\n    }\n}\n?>","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":317.99999999999994,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":20,"state":"php-start","mode":"ace/mode/php"}},"timestamp":1731411354865}